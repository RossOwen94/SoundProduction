{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/contact-me/contact-me.component.css","webpack:///./src/app/contact-me/contact-me.component.html","webpack:///./src/app/contact-me/contact-me.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/download/download.component.css","webpack:///./src/app/download/download.component.html","webpack:///./src/app/download/download.component.ts","webpack:///./src/app/forgot/forgot.component.css","webpack:///./src/app/forgot/forgot.component.html","webpack:///./src/app/forgot/forgot.component.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/login-message/login-message.component.css","webpack:///./src/app/login-message/login-message.component.html","webpack:///./src/app/login-message/login-message.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/payment/payment.component.css","webpack:///./src/app/payment/payment.component.html","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/sample.service.ts","webpack:///./src/app/samples/samples.component.css","webpack:///./src/app/samples/samples.component.html","webpack:///./src/app/samples/samples.component.ts","webpack:///./src/app/score-details/score-details.component.css","webpack:///./src/app/score-details/score-details.component.html","webpack:///./src/app/score-details/score-details.component.ts","webpack:///./src/app/side-cart/side-cart.component.css","webpack:///./src/app/side-cart/side-cart.component.html","webpack:///./src/app/side-cart/side-cart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".containerr{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-color: #4a4e4e;\\r\\n}\\r\\n\\r\\n\\r\\n.navImage{\\r\\n    height: 50px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.main{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 1fr 1fr;\\r\\n        grid-template-columns: 1fr 1fr 1fr;\\r\\n    height: 300px;\\r\\n    color: white;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n\\r\\n\\r\\n.info{\\r\\n    height: 300px;\\r\\n    margin-left:100px;\\r\\n}\\r\\n\\r\\n\\r\\nhr{\\r\\n    width: 90%;\\r\\n    border-color:white;\\r\\n}\\r\\n\\r\\n\\r\\n#dot1{\\r\\n    color: rgb(128, 228, 35);\\r\\n}\\r\\n\\r\\n\\r\\n#dot2{\\r\\n    color: rgb(224, 144, 52);\\r\\n}\\r\\n\\r\\n\\r\\n#dot3{\\r\\n    color: rgb(216, 51, 10);\\r\\n}\\r\\n\\r\\n\\r\\n.slogan{\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    font-size: 50px;\\r\\n    letter-spacing: 10px;\\r\\n    text-shadow: 4px 4px 3px rgba(0,0,0,0.1);\\r\\n}\\r\\n\\r\\n\\r\\n.banner{\\r\\n    width: 100%;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n\\r\\n.collapse.navbar-collapse{\\r\\n    width: 33%;\\r\\n}\\r\\n\\r\\n\\r\\n#topBar{\\r\\n    width: 20%;\\r\\n    font-family: Helvetica;\\r\\n}\\r\\n\\r\\n\\r\\n.fbButtons{\\r\\n    width:33%;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 3fr 1fr;\\r\\n        grid-template-columns: 3fr 1fr;\\r\\n}\\r\\n\\r\\n\\r\\n.fb-like{\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n\\r\\n.footerLink{\\r\\n    margin-right:10px;\\r\\n    color: white;\\r\\n    border-left: 2px solid white;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.myFooter{\\r\\n    display:-ms-grid;\\r\\n    display:grid;\\r\\n    -ms-grid-columns: 1fr 3fr 1fr;\\r\\n        grid-template-columns: 1fr 3fr 1fr;\\r\\n    height: 40px;\\r\\n    padding-top: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.copyright{\\r\\n    padding-left:10px;\\r\\n}\\r\\n\\r\\n\\r\\nfooter{\\r\\n    background-color: #c03b06;\\r\\n    color: white;\\r\\n    font-family: Helvetica;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" id=\\\"topBar\\\" routerLink=\\\"/\\\">Lorenz Productions<img class=\\\"navImage\\\" src=\\\"https://gideonsystems.net/images/mic.jpg\\\"></a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/samples\\\">Buy Scores</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/payment\\\">Checkout</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/contactMe\\\">Contact</a>\\n        </li>\\n        <li *ngIf=\\\"!auth.isLoggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"!auth.isLoggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"auth.isLoggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"auth.isLoggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/logout\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div id=\\\"fb-root\\\"></div>\\n    <script>(function(d, s, id) {\\n      var js, fjs = d.getElementsByTagName(s)[0];\\n      if (d.getElementById(id)) return;\\n      js = d.createElement(s); js.id = id;\\n      js.src = \\\"https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0\\\";\\n      fjs.parentNode.insertBefore(js, fjs);\\n    }(document, 'script', 'facebook-jssdk'));</script>\\n  \\n    <!-- Your like button code -->\\n    <div class=\\\"fbButtons\\\">\\n        <span class=\\\"fb-like\\\" \\n          data-href=\\\"https://gideonsystems.net\\\" \\n          data-layout=\\\"standard\\\" \\n          data-action=\\\"like\\\" \\n          data-show-faces=\\\"true\\\">\\n        </span>\\n  \\n        <span class=\\\"fb-share-button\\\" \\n          data-href=\\\"https://gideonsystems.net\\\" \\n          data-layout=\\\"button_count\\\">\\n        </span>\\n      </div>\\n  </nav>\\n\\n\\n<div class=\\\"containerr\\\">\\n    <img class=\\\"banner\\\" src=\\\"https://gideonsystems.net/images/studio.jpg\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<footer>\\n  <div class=\\\"myFooter\\\">\\n      <span class=\\\"copyright\\\">&copy; Gideon-Systems</span>\\n        <span class=\\\"footerButtons\\\">\\n          <a class=\\\"footerLink\\\" routerLink=\\\"#\\\">About</a>\\n          <a class=\\\"footerLink\\\" routerLink=\\\"/contactMe\\\">Contact</a>\\n          <a class=\\\"footerLink\\\" onclick=\\\"window.scrollTo(0,0)\\\">Back to Top</a>\\n        </span>\\n  </div>\\n</footer>\"","import { Component } from '@angular/core';\nimport { AuthenticationService} from './authentication.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    constructor(public auth: AuthenticationService){}\n\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http'; \nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { SamplesComponent } from './samples/samples.component';\nimport { PaymentComponent } from './payment/payment.component';\nimport { CartComponent } from './cart/cart.component';\nimport { SideCartComponent } from './side-cart/side-cart.component';\nimport { DownloadComponent } from './download/download.component';\nimport { LoginComponent } from './login/login.component';\nimport { ContactMeComponent } from './contact-me/contact-me.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardService } from './auth-guard.service';\nimport { CartService } from './cart.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { LoginMessageComponent } from './login-message/login-message.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { ScoreDetailsComponent } from './score-details/score-details.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst appRoutes: Routes = [\n  {path:'', component:HomePageComponent},\n  {path:'samples',component:SamplesComponent},\n  {path:'payment',component:PaymentComponent},\n  {path:'download',component:DownloadComponent},\n  {path:'contactMe',component:ContactMeComponent},\n  {path:'login', component:LoginComponent},\n  {path:'register', component:RegisterComponent},\n  {path:'profile', component:ProfileComponent, canActivate: [AuthGuardService]},\n  {path: 'logout', component:LogoutComponent},\n  {path: 'login-message', component:LoginMessageComponent},\n  {path: 'forgot',component:ForgotComponent},\n  {path: 'score-details/:name',component: ScoreDetailsComponent},\n  {path: 'dashboard',component: DashboardComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    SamplesComponent,\n    PaymentComponent,\n    CartComponent,\n    SideCartComponent,\n    DownloadComponent,\n    LoginComponent,\n    ContactMeComponent,\n    ProfileComponent,\n    RegisterComponent,\n    LogoutComponent,\n    LoginMessageComponent,\n    ForgotComponent,\n    ScoreDetailsComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [AuthenticationService,AuthGuardService,CartService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  canActivate() {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n    return true;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpClientModule } from '@angular/common/http';\nimport  {map} from 'rxjs/operators';\nimport { Observable} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private token: string;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  private saveToken(token: string): void {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n  }\n\n  public getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/');\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  private request(method: 'post'|'get', type: 'login'|'register'|'profile' | 'transaction',user?: TokenPayload): Observable<any> {\n    let base;\n  \n    if (method === 'post') {\n        base = this.http.post(`https://gideonsystems.net/users/${type}`, user);\n    } else {\n      base = this.http.get(`https://gideonsystems.net/users/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n    \n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      })\n    );\n  \n    return request;\n  }\n\n  public transaction(transactionData: PaymentTokenPayload): Observable<any> {\n    console.log(transactionData);\n    let transToken = this.http.post('https://gideonsystems.net/users/transaction',{transactionData: transactionData},{ headers: { Authorization: `Bearer ${this.getToken()}` }},);\n    const token = transToken.pipe(map((data: TokenResponse) => {\n        if(data.token){\n          console.log(data.token);\n          this.saveToken(data.token);\n        }\n        return data;\n    })\n  );\n    return token;\n  }\n\n  public register(user: TokenPayload): Observable<any> {\n    return this.request('post', 'register', user);\n  }\n  \n  public login(user: TokenPayload): Observable<any> {\n    console.log(user);\n    return this.request('post', 'login', user);\n  }\n  \n  public profile(): Observable<any> {\n    return this.request('get', 'profile');\n  }\n\n  public updateToken(data){\n    localStorage.setItem('mean-token', data);\n    this.token = data;\n\n  }\n\n\n}\n\nexport interface UserDetails {\n  _id: string;\n  email: string;\n  name: string;\n  purchases: [string];\n  exp: number;\n  iat: number;\n}\n\ninterface TokenResponse {\n  token: string;\n}\nexport interface PaymentTokenPayload{\n  name: string;\n  email: string;\n  total: number;\n  items: [{\n      name: string;\n      price: string;\n      currency: string;\n      quantity: string;\n  }];\n  saleId: string;\n\n}\nexport interface TokenPayload {\n  email: string;\n  password: string;\n  name?: string;\n  subscription: boolean;\n}\n\nexport interface PurchaseTokenPayload {\n  _id: string;\n  email: string;\n  name?: string;\n  scores: [string];\n  exp: number;\n  iat: number;\n}\n","import { Injectable } from '@angular/core';\nimport { Sample } from './samples/samples.component';\nimport { Observable} from 'rxjs';\nimport  { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  samples: Sample[] = [];\n  subTotal: number = 0.00;\n  itemCount: number = 0;\n  constructor() { }\n\n  ngOnInit(){\n   \n\n  }\n\n\ngetSelectedSamples(){\n  return this.samples;\n}\n\ngetSubTotal(){\n    return this.subTotal;\n}\n\ngetItemCount(){\n  return this.itemCount;\n}\n\naddSample(Sample){\n  \n   if(this.findSample(Sample)!=-1)\n   {\n      window.alert('The selected score is already in your cart.');\n      return ;\n   }\n    this.samples.push(Sample);\n    this.itemCount++;\n    this.subTotal+=Sample.price;\n}\n\nfindSample(Sample): number{\n  for(let i=0;i<this.samples.length;i++){\n    if(this.samples[i].name===Sample.name)\n    {\n      return i;\n    }\n  }\n  return -1;\n}\n\nremoveSample(Sample)\n  {\n    this.subTotal-=Sample.price;\n    this.samples.splice(this.findSample(Sample),1);\n    this.itemCount--;\n    \n  }\n  //Add an event emitter to change the sidecart display\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  cart works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".emailForm{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 100px;\\r\\n    margin-bottom: 100px;\\r\\n    width: 500px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.formField{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    margin-left: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n    grid-column-gap: 5px;\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n.successMessage{\\r\\n    width: 500px;\\r\\n    height: 300px;\\r\\n    margin-left: 100px;\\r\\n    margin-top: 100px;\\r\\n    margin-bottom: 100px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.successText{\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\n.contactMePage{\\r\\n    background-color:  #4a4e4e;\\r\\n}\\r\\n\\r\\n.successActions{\\r\\n    width:50%;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.extraText{\\r\\n    font-size: 15px;\\r\\n    margin-top:15px;\\r\\n}\\r\\n\\r\\n.supportLabel{\\r\\nfont-size: 35px;\\r\\ncolor: white;\\r\\n}\\r\\n\\r\\nhr{\\r\\n    border-color: white;\\r\\n}\"","module.exports = \"<div class=\\\"contactMePage\\\">\\n    <form *ngIf=\\\"!emailSuccess\\\" [formGroup]=\\\"rForm\\\" #myForm=\\\"ngForm\\\" class=\\\"emailForm\\\" (ngSubmit)=\\\"submitForm(rForm.value,myForm)\\\">\\n        <div class=\\\"supportLabel\\\">Submit Your Ticket Below :</div>\\n        <hr>\\n        <div class=\\\"formField\\\" >\\n          <label for=\\\"name\\\">Full Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"First Last\\\" [(ngModel)]=\\\"name\\\">\\n        </div>\\n        <div class=\\\"formField\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"email\\\">\\n        </div>\\n        <div class=\\\"formField\\\">\\n          <label for=\\\"message\\\">Describe your concern or question below in detail:</label>\\n          <textarea name=\\\"message\\\" formControlName=\\\"message\\\" rows=\\\"6\\\" cols=\\\"68\\\" placeholder=\\\"Tip: Include details from site generated emails/paypal payment details for faster inquiries...\\\" [(ngModel)]=\\\"message\\\"></textarea>\\n        </div>\\n        <div class=\\\"buttons\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!rForm.valid\\\">Submit Ticket</button>\\n        </div>\\n      </form>\\n      <div *ngIf=\\\"emailSuccess\\\" class=\\\"successMessage\\\">\\n        <div class=\\\"successText\\\">\\n            Your ticket has been submitted!\\n        </div>\\n        <div class=\\\"extraText\\\">\\n          If you don't get a confirmation email shortly\\n          be sure the information was correct and resubmit your\\n          request, or contact us directly at supportemail@gmail.com\\n        </div>\\n        \\n        <div class=\\\"successActions\\\">\\n          <a routerLink=\\\"/\\\"><button class=\\\"btn btn-default\\\">Home Page</button></a>\\n        </div>\\n      </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\n@Component({\n  selector: 'app-contact-me',\n  templateUrl: './contact-me.component.html',\n  styleUrls: ['./contact-me.component.css']\n})\nexport class ContactMeComponent implements OnInit {\n  \n  rForm: FormGroup;\n  name: string;\n  email: string;\n  message: string;\n  emailSuccess: boolean = false;\n\n  constructor(public http: Http, private fb: FormBuilder) { \n\n    this.rForm = fb.group({\n      'name'    : [null,Validators.required],\n      'email'   : [null,Validators.compose([Validators.email,Validators.required])],\n      'message' : [null,Validators.required]\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n  submitForm(formData,form: NgForm){\n    this.sendEmail(formData).subscribe( success => {\n        if(success){\n          this.emailSuccess=true;\n        }\n    })\n  }\n\n  sendEmail(formData): Observable<any>{\n    return this.http.post('https://gideonsystems.net/contact/ticket',formData);\n  }\n\n  resetForm(){\n    this.emailSuccess= false;\n    return ;\n  }\n\n\n}\n","module.exports = \".dashboardWindow{\\r\\n    color: white;\\r\\n    margin-left: 100px;\\r\\n    margin-top: 100px;\\r\\n    margin-right: 100px;\\r\\n    margin-bottom: 400px;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.formField{\\r\\n    margin-top: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.dashButton{\\r\\n    border:none;\\r\\n    background-color:white;\\r\\n    cursor: pointer;\\r\\n    height: 50px;\\r\\n    margin-left:30px;\\r\\n}\\r\\n\\r\\nli{\\r\\n    list-style-type: none;\\r\\n}\\r\\n\\r\\n.dashboardNav{\\r\\n    background-color: white;\\r\\n    box-shadow: 5px 10px 18px black;\\r\\n    color: black;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 1fr 1fr;\\r\\n        grid-template-columns: 1fr 1fr 1fr;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.dashboardHead{\\r\\n    margin-left: 20px;\\r\\n}\\r\\n\\r\\nhr{\\r\\n    border-color:white;\\r\\n}\\r\\n\\r\\n.singleSample{\\r\\n    margin-bottom:20px;\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n    box-shadow: 5px 10px 18px black;\\r\\n    padding-top: 30px;\\r\\n    padding-bottom:30px;\\r\\n    padding-left: 30px;\\r\\n    padding-right:30px;\\r\\n    word-break: break-all;\\r\\n    border-radius: 5px;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n#addButton{\\r\\n    margin-top: 50px;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.remove{\\r\\n    margin-top:50px;\\r\\n}\\r\\n\\r\\n.dataField{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 3fr;\\r\\n        grid-template-columns: 1fr 3fr;\\r\\n}\\r\\n\\r\\n.content{\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n.allSamples{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 1fr ;\\r\\n        grid-template-columns: 1fr 1fr ;\\r\\n    -ms-grid-rows: 1fr 1fr ;\\r\\n        grid-template-rows: 1fr 1fr ;\\r\\n    grid-column-gap: 5px;\\r\\n}\\r\\n\\r\\n.updateForm{\\r\\n    width: 100%;\\r\\n    margin-top:30px;\\r\\n}\\r\\n\\r\\n.scoreLabel{\\r\\n    color:rgb(10, 10, 134);\\r\\n    font-size: 25px;\\r\\n\\r\\n}\\r\\n\\r\\n.updateLabel{\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.editButton{\\r\\n    background-color: rgb(73, 73, 204);\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid black;\\r\\n    margin-right: 10px;\\r\\n    margin-top: 10px;\\r\\n    color:white;\\r\\n}\\r\\n\\r\\n.success{\\r\\n    font-size: 25px;\\r\\n\\r\\n}\\r\\n\\r\\n#submit{\\r\\n    margin-top: 50px;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.removeButton{\\r\\n    background-color: rgb(180, 3, 3);\\r\\n    color:white;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid black;\\r\\n    width:100px;\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n.editButton{\\r\\n    width: 100px;\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n.emailForm{\\r\\n    width: 60%\\r\\n}\\r\\n\\r\\n.closeEdit{\\r\\n    background-color: rgb(1, 158, 197);\\r\\n    color:  white;\\r\\n}\\r\\n\\r\\n#nameField{\\r\\n    display:none;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"dashboardWindow\\\">\\n    <h3 class=\\\"dashboardHead\\\">Admin Dashboard</h3>\\n    <hr>\\n    <div class=\\\"dashboardContent\\\">\\n      <div class=\\\"dashboardNav\\\">\\n        <li><button class=\\\"dashButton\\\" (click)=\\\"this.setOption('add')\\\">Add Score</button></li>\\n        <li><button class=\\\"dashButton\\\" (click)=\\\"this.setOption('scores')\\\">View/Edit Scores</button></li>\\n        <li><button class=\\\"dashButton\\\" (click)=\\\"this.setOption('sales')\\\">View all Sales</button></li>\\n      </div>\\n      <div class=\\\"content\\\">\\n          <div *ngIf=\\\"this.option=='add'\\\">\\n              <form *ngIf=\\\"!addSuccess\\\" [formGroup]=\\\"rForm\\\" #myForm=\\\"ngForm\\\" class=\\\"emailForm\\\" (ngSubmit)=\\\"addScore(rForm.value,myForm)\\\">\\n                  <div class=\\\"supportLabel\\\">Enter score details below to add a score :</div>\\n                  <hr>\\n                  <div class=\\\"formField\\\" >\\n                      <label for=\\\"name\\\">Name of Score(.pdf filename must match exactly):</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Score Name\\\">\\n                    </div>\\n                  <div class=\\\"formField\\\">\\n                    <label for=\\\"soundcloud\\\">SoundCloud URL(Find the 'src' string from the 'Embed Code'. i.e. src=\\\"https://....\\\"</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"soundcloud\\\" name=\\\"soundcloud\\\" placeholder=\\\"e.x. https://w.soundcloud.com/player/?url=https%3A//api.sound...\\\">\\n                  </div>\\n                  <div class=\\\"formField\\\" >\\n                    <label for=\\\"difficulty\\\">Difficulty( single number from 1-10)</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"difficulty\\\" name=\\\"difficulty\\\" placeholder=\\\"Enter 1-10\\\">\\n                  </div>\\n                  <div class=\\\"formField\\\" >\\n                      <label for=\\\"Instrumentation\\\">Instrumentation(Enter a comma separated list like 'Marimba(3),Vibe(2),Timpani,Accessories' </label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"instrumentation\\\" name=\\\"instrumentation\\\" placeholder=\\\"e.x. Marimba 3,Zylophone (2), Two Zylophones,etc,etc\\\">\\n                  </div>\\n                  <div class=\\\"formField\\\" >\\n                      <label for=\\\"shortDesc\\\">Enter a sentence or two to get peoples attention/ give a short description.</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"shortDesc\\\" name=\\\"shortDesc\\\" placeholder=\\\"e.x. An ominous build of emotions leads to a blah blah blah in this great piece\\\">\\n                  </div>\\n                  <div class=\\\"formField\\\" >\\n                      <label for=\\\"longDesc\\\">Enter a longer description of the piece to be displayed on it's individual page </label>\\n                      <textarea  class=\\\"form-control\\\" formControlName=\\\"longDesc\\\" name=\\\"longDesc\\\" rows=\\\"15\\\" cols=\\\"50\\\" placeholder=\\\"e.x. Marimba 3,Zylophone (2), Two Zylophones,etc,etc\\\"></textarea>\\n                  </div>\\n                  <div class=\\\"formField\\\" >\\n                      <label for=\\\"price\\\">Enter a number, no dollar sign.</label>\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" name=\\\"price\\\" placeholder=\\\"e.x. '40' or '39.99'\\\">\\n                  </div>\\n\\n                  <div class=\\\"buttons\\\">\\n                    <button id=\\\"addButton\\\"type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!rForm.valid\\\">Add Score</button>\\n                  </div>\\n                </form> \\n                <div *ngIf=\\\"addSuccess\\\">\\n                        <div class=\\\"success\\\">Score Added to Database</div>\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"closeAddForm()\\\">Close</button>\\n                </div>\\n          </div>\\n          <div class=\\\"allSamples\\\" *ngIf=\\\"this.option=='scores'\\\">\\n              <li *ngFor=\\\"let sample of samples\\\">\\n                  <div *ngIf=\\\"!isEditing || selectedScore == sample.name\\\" class=\\\"singleSample\\\">\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Name:</span>{{sample.name}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Short Description:</span>{{sample.description}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Long Description:</span>{{sample.longDesc}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Difficulty:</span>{{sample.difficulty}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Price:</span>{{sample.price}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Instrumentation:</span>{{sample.instrumentation}}</div>\\n                      <div class=\\\"dataLabel\\\">SoundCloud URL:</div>\\n                      <div class=\\\"soundcloudURL\\\">{{sample.soundCloud}}</div>\\n                      <button class=\\\"editButton\\\" (click)=\\\"setSelectedScore(sample.name)\\\">Edit</button>\\n                      <button class=\\\"removeButton\\\" (click)=\\\"openRemove(sample.name)\\\" >Remove</button>\\n                      <div *ngIf=\\\"selectedScore == sample.name\\\">\\n                                \\n                            <div *ngIf=\\\"!removing\\\">\\n                                    <form *ngIf=\\\"!updateSuccess\\\" [formGroup]=\\\"rForm\\\" #myForm=\\\"ngForm\\\" class=\\\"updateForm\\\" (ngSubmit)=\\\"updateScore(rForm.value,myForm,sample.name)\\\">\\n                                            <div class=\\\"updateLabel\\\">Enter New Score Details Below for</div>\\n                                            <div ><span class=\\\"scoreLabel\\\">{{sample.name}}</span> - Name cannot be changed</div>\\n                                            <div>If a field will stay the same, copy and paste from the data bove.</div>\\n                                            <hr>\\n                                            <div class=\\\"formField\\\">\\n                                                <input id=\\\"nameField\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" name=\\\"name\\\" value=\\\"sample.name\\\">\\n                                            </div>\\n                                            <div class=\\\"formField\\\">\\n                                              <label for=\\\"soundcloud\\\">SoundCloud URL(Since you are editing, you will likely copy from above)</label>\\n                                              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"soundcloud\\\" name=\\\"soundcloud\\\" placeholder=\\\"e.x. https://w.soundcloud.com/player/?url=https%3A//api.sound...\\\">\\n                                            </div>\\n                                            <div class=\\\"formField\\\" >\\n                                              <label for=\\\"difficulty\\\">Difficulty( single number from 1-10)</label>\\n                                              <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"difficulty\\\" name=\\\"difficulty\\\" placeholder=\\\"Enter 1-10\\\">\\n                                            </div>\\n                                            <div class=\\\"formField\\\" >\\n                                                <label for=\\\"Instrumentation\\\">Instrumentation(Enter a comma separated list like 'Marimba(3),Vibe(2),Timpani,Accessories' </label>\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"instrumentation\\\" name=\\\"instrumentation\\\" placeholder=\\\"e.x. Marimba 3,Zylophone (2), Two Zylophones,etc,etc\\\">\\n                                            </div>\\n                                            <div class=\\\"formField\\\" >\\n                                                <label for=\\\"shortDesc\\\">Enter a sentence or two to get peoples attention/ give a short description.</label>\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"shortDesc\\\" name=\\\"shortDesc\\\"placeholder=\\\"e.x. An ominous build of emotions leads to a blah blah blah in this great piece\\\">\\n                                            </div>\\n                                            <div class=\\\"formField\\\" >\\n                                                <label for=\\\"longDesc\\\">Enter a longer description of the piece to be displayed on it's individual page </label>\\n                                                <textarea  class=\\\"form-control\\\" formControlName=\\\"longDesc\\\" name=\\\"longDesc\\\" rows=\\\"15\\\" cols=\\\"50\\\" placeholder=\\\"Be descriptive\\\"></textarea>\\n                                            </div>\\n                                            <div class=\\\"formField\\\" >\\n                                                <label for=\\\"price\\\">Enter a number, no dollar sign.</label>\\n                                                <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" name=\\\"price\\\" placeholder=\\\"e.x. '40' or '39.99'\\\">\\n                                            </div>\\n                          \\n                                            <div class=\\\"buttons\\\">\\n                                              <button id=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!rForm.valid\\\">Save</button>\\n                                              <button id=\\\"addButton\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeEditor()\\\">Cancel</button>\\n                                            </div>\\n                                          </form>\\n                                          <div *ngIf=\\\"updateSuccess\\\">\\n                                              <div class=\\\"success\\\">{{sample.name}} has been updated.</div>\\n                                              <button class=\\\"btn btn-primary\\\" (click)=\\\"closeEditor()\\\">Close</button>\\n                                          </div>\\n                            </div>\\n                            <div class=\\\"remove\\\" *ngIf=\\\"removing\\\">\\n                                <div *ngIf=\\\"!removeSuccess\\\">\\n                                    <div class=\\\"updateLabel\\\">Are You Sure You Want To Remove:</div>\\n                                    <div class=\\\"scoreLabel\\\">{{sample.name}}</div>\\n                                    <button id=\\\"addButton\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeScore(sample.name)\\\">Remove</button>\\n                                    <button id=\\\"addButton\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeEditor()\\\">Cancel</button>\\n                                </div>\\n                                <div *ngIf=\\\"removeSuccess\\\">\\n                                        <div class=\\\"success\\\">{{sample.name}} has been removed.</div>\\n                                        <button class=\\\"btn btn-primary\\\" (click)=\\\"closeEditor()\\\">Close</button>\\n                                </div>\\n                            </div>\\n                      </div>\\n                  </div>\\n              </li>\\n          </div>\\n          <div class=\\\"allSamples\\\" *ngIf=\\\"this.option=='sales'\\\">\\n              <li *ngFor=\\\"let transaction of transactions\\\">\\n                  <div class=\\\"singleSample\\\">\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Transaction Date:</span>{{transaction.date}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Buyer Name:</span>{{transaction.name}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Email(username):</span>{{transaction.email}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Paypal-Email:</span>{{transaction.paypalEmail}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Items:</span>{{transaction.items}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Total:</span>{{transaction.total | currency}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Paypal Transaction ID:</span>{{transaction.transactionId}}</div>\\n                      <div class=\\\"dataField\\\"><span class=\\\"dataLabel\\\">Expiration:</span>{{transaction.exp}}</div>\\n                  </div>\\n              </li>\\n          </div>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { HttpClient,HttpClientModule, HttpResponse } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport  {map} from 'rxjs/operators';\nimport { Observable} from 'rxjs';\nimport { Sample } from '../samples/samples.component';\nimport { SampleService } from '../sample.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  option: string;\n  addSuccess: boolean = false;\n  transactions: Transaction[];\n  users: UserDetails[];\n  samples: Sample[];\n  isEditing: boolean= false;\n  selectedScore: string;\n  updateSuccess: boolean= false;\n  removeSuccess: boolean=false;\n  removing: boolean=false;\n\n  rForm: FormGroup;\n  updateForm: FormGroup;\n  email: string;\n  name: string;\n  password: string;\n\n  constructor(private fb:FormBuilder,private http:HttpClient,public auth:AuthenticationService,private sampleService:SampleService) { \n\n    this.rForm = fb.group({\n      'name'   : [null],\n      'soundcloud'  : [null,Validators.compose([Validators.required])],\n      'difficulty'    : [null,Validators.required],\n      'instrumentation'    : [null,Validators.required],\n      'shortDesc'    : [null,Validators.required],\n      'longDesc'    : [null,Validators.required],\n      'price'    : [null,Validators.required]\n    })\n\n\n  }\n\n  ngOnInit() {\n\n    this.getTransactions().subscribe((newtrans) => {\n      this.transactions = newtrans; \n      console.log(this.transactions);\n    });\n    this.getUsers().subscribe((newusers) => {\n      this.users = newusers; \n      console.log(this.users);\n    });\n    this.sampleService.getSamples().subscribe((newsamples) => {\n      this.samples = newsamples; \n      console.log(this.samples);\n    });\n\n  }\n\n\n\n  setOption(newOption){\n    this.option=newOption;\n  }\n\n  addScore(formData,form: NgForm){\n    this.sendForm(formData).subscribe();\n    this.addSuccess=true;\n  }\n\n  closeAddForm(){\n    this.rForm.reset();\n    this.addSuccess=false;\n    this.sampleService.getSamples().subscribe((newsamples) => {\n      this.samples = newsamples; \n     \n    });\n  }\n\n  sendForm(formData): Observable<any>{\n    return this.http.post('https://gideonsystems.net/admin/add',{scoreData: formData},{headers: {Authorization: `Bearer ${this.auth.getToken()}` }});\n\n  }\n\n\n  getTransactions(): Observable<any>{\n    return this.http.get('https://gideonsystems.net/admin/transactions',{headers: {Authorization: `Bearer ${this.auth.getToken()}`}});\n  }\n\n  getUsers(): Observable<any>{\n    return this.http.get('https://gideonsystems.net/admin/users',{headers: {Authorization: `Bearer ${this.auth.getToken()}`}});\n  }\n\n  setSelectedScore(score){\n    this.selectedScore=score;\n    this.isEditing=true;\n    this.removing=false;\n  }\n\n  closeEditor(){\n    this.isEditing=false;\n    this.removing=false;\n    this.selectedScore=\"\";\n    this.updateSuccess=false;\n    this.removeSuccess=false;\n    this.rForm.reset();\n    this.sampleService.getSamples().subscribe((newsamples) => {\n      this.samples = newsamples; \n    });\n  }\n\n  updateScore(formData,form: NgForm,scoreName){\n    this.sendUpdate(formData,scoreName).subscribe((response)=>{\n      if(response){\n          this.updateSuccess= true;\n          return ;\n      }\n  });\n\n  }\n\n  sendUpdate(formData,scoreName): Observable<any>{\n    return this.http.post('https://gideonsystems.net/admin/update',{scoreData: formData,scoreName},{headers: {Authorization: `Bearer ${this.auth.getToken()}` }});\n\n  }\n\n  openRemove(score){\n    this.removing=true;\n    this.isEditing=true;\n    this.selectedScore=score;\n  }\n\n  removeScore(score){\n      this.sendRemoval(score).subscribe(()=>{\n        this.removeSuccess=true;\n      },(err)=>{\n        console.log(err);\n      })\n      return ;\n  }\n  sendRemoval(score): Observable<any>{\n    return this.http.post('https://gideonsystems.net/admin/remove',{scoreName: score},{headers: {Authorization: `Bearer ${this.auth.getToken()}` }});\n  }\n\n}\n\n\ninterface Transaction{\n  date: Date,     //I generate this, not provided\n  name: string,   //Comes from transactionData\n  email: string,            //Comes from user JWT \n  paypalEmail: string,\n  items: string[],\n  total: number,            //Price of the order\n  transactionId: string,\n  exp: Date  \n}\n\ninterface UserDetails{\n  email: string,\n  name: string,\n  purchases: string[],\n  hash: string,\n  salt: string\n}","module.exports = \".downloadContainer{\\r\\n    height: 800px;\\r\\n    margin-left:150px;\\r\\n    margin-top:100px;\\r\\n    color: white;\\r\\n    width: 50%;\\r\\n}\\r\\n.scoreLabel{\\r\\n    font-size: 25px;\\r\\n    margin-right:30px;\\r\\n}\\r\\n.singleDownload{\\r\\n    width: 50%;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n}\\r\\nli{\\r\\n    list-style-type: none;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\nhr{\\r\\n    border-color: white;\\r\\n}\\r\\n.dlLabel{\\r\\n    font-size: 50px;\\r\\n}\\r\\n.downloadLink{\\r\\n    font-size: 15px;\\r\\n    background-color: rgb(26, 26, 129);\\r\\n    color: white;\\r\\n    border: 1px solid black;\\r\\n    border-radius:3px;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"downloadContainer\\\">\\n  <div class=\\\"dlLabel\\\">Your Downloads :</div>\\n  <hr>\\n  <li *ngFor=\\\"let linkscore of linkscores \\\">\\n    <span class=\\\"singleDownload\\\">\\n      <span class=\\\"scoreLabel\\\">{{linkscore.name}}</span>\\n      <span><button [attr.data-sample]=\\\"linkscore.name\\\" class=\\\"downloadLink\\\" >Download</button></span>\\n    </span>\\n</li>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient,HttpClientModule } from '@angular/common/http';\nimport { AuthenticationService} from '../authentication.service';\nimport { ResponseContentType} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { saveAs } from 'file-saver';\n\n\n\n\n@Component({\n  selector: 'app-download',\n  templateUrl: './download.component.html',\n  styleUrls: ['./download.component.css']\n})\nexport class DownloadComponent implements OnInit {\n\n  urls: string[];\n  linkscores: {href:string,name:string}[];\n  firstCheck: boolean = true;\n\n  constructor(public auth: AuthenticationService,public http:HttpClient) { }\n\n\n  //This component is going to be a page with a shit ton of links(potentially) \n  //This list will be the result of hitting the download controller with a post request\n  //Containing just the user token. The user token will contain all purchaseTokens the user has \n  //Ever gotten. The download controller will loop through the purchaseTokens and build an array \n  //of links,one for each score(so long as the token is not expired). The page will display\n  //These links as <a> tags that either open in another window or trigger an auto download in the \n  //Same page\n\n  ngOnInit() {\n    this.linkscores= [];\n     this.getURLs().subscribe(URLs =>{\n       for(let i=0;i<URLs.verifiedURLs.length;i++){\n        var newLink = new Object({href: URLs.verifiedURLs[i],name: this.getName(URLs.verifiedURLs[i])});\n          this.linkscores.push({href: URLs.verifiedURLs[i],name: this.getName(URLs.verifiedURLs[i])});\n       }\n     \n      \n\n       });\n}\nngAfterViewChecked(){\n  var downloadlinks = document.getElementsByClassName('downloadLink');\n    if(this.firstCheck){\n        for(let i=0;i<downloadlinks.length;i++){\n          this.firstCheck = false;\n          downloadlinks[i].addEventListener('click',()=>{\n                  var baseUrl = 'https://gideonsystems.net/download/serve?id=';\n                return this.http.get(`${baseUrl}`+`${downloadlinks[i].getAttribute('data-sample')}`, { headers: { Authorization: `Bearer ${this.auth.getToken()}` }, responseType:'blob' as 'json'})\n                .pipe().subscribe((data)=>{\n                      console.log(data);\n                      var file = new Blob([data], {type: 'application/pdf'});\n                      var link = document.createElement('a');\n                      var fileUrl = URL.createObjectURL(file);\n                      link.href= fileUrl;\n                      link.download = 'score_download.pdf';\n                      link.click();\n                  })\n          });\n      }\n      \n\n    }\n    \n  }\n     \n  getName(url: string){\n    var name = url.split('=')[1];\n    return name;\n  }\n\n  getURLs():any{\n      var response = this.http.get('https://gideonsystems.net/download/userScores',{ headers: { Authorization: `Bearer ${this.auth.getToken()}` }})\n      return response;\n  }\n\n\n  }","module.exports = \".supportLabel{\\r\\n    font-size: 15px;\\r\\n    color: black;\\r\\n}\\r\\n.failureMessage{\\r\\n    color:rgb(209, 19, 19);\\r\\n\\r\\n\\r\\n}\\r\\n.successMessage{\\r\\n    font-size: 25px;\\r\\n    color: white;\\r\\n    margin-left: 100px;\\r\\n    margin-top: 100px;\\r\\n    margin-bottom:200px;\\r\\n}\\r\\n.formField{\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.forgotForm{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 100px;\\r\\n    margin-bottom: 100px;\\r\\n    width: 600px;\\r\\n    color: black;\\r\\n    margin: 30px auto;\\r\\n    background-color: rgba(250, 250, 249, 0.527);\\r\\n    padding: 40px;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid rgb(53, 52, 52);\\r\\n    box-shadow: 5px 10px 18px black;\\r\\n}\"","module.exports = \"<div  class=\\\"forgotPage\\\">\\n    <form  *ngIf=\\\"!emailSuccess\\\" [formGroup]=\\\"rForm\\\" #myForm=\\\"ngForm\\\" class=\\\"forgotForm\\\" (ngSubmit)=\\\"recover(rForm.value,myForm)\\\">\\n        <div class=\\\"supportLabel\\\">Enter the email associated with your account and we will email you instructions\\n          to reset your password  :</div>\\n        <hr>\\n        <div class=\\\"failureMessage\\\" *ngIf=\\\"emailFailure\\\">No user was found with that email address.</div>\\n        <div class=\\\"formField\\\">\\n          <label for=\\\"email\\\">Email :</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"email\\\">\\n        </div>\\n        <div class=\\\"buttons\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!rForm.valid\\\">Submit</button>\\n        </div>\\n    </form>\\n    \\n    <div *ngIf=\\\"emailSuccess\\\" class=\\\"successMessage\\\">An email has been sent to {{this.email}} with a link to reset your password.</div>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { AuthenticationService } from '../authentication.service';\nimport { Http } from '@angular/http';\nimport {Observable } from 'rxjs';\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css']\n})\nexport class ForgotComponent implements OnInit {\n\n\n  rForm: FormGroup;\n  email: string;\n  password: string;\n  emailSuccess: boolean = false;\n  emailFailure: boolean = false;\n  constructor(public http:Http,private auth: AuthenticationService,private fb:FormBuilder) { \n\n    this.rForm = fb.group({\n      'email'   : [null,Validators.compose([Validators.email,Validators.required])]\n    })\n  }\n\n  ngOnInit() {\n\n  }\n\n  recover(formData,form: NgForm){\n   \n    var result = this.sendRecovery(formData).subscribe(result => {\n     \n      if(result.status==200){\n        this.emailSuccess=true;\n       \n      }\n      else{\n        this.emailFailure=true;\n      }\n\n    })\n\n    return ;\n\n  }\n\n  sendRecovery(formData): Observable<any>{\n    return this.http.post('http://localhost:1737/forgot/recover',formData);\n\n  }\n}\n","module.exports = \"\\r\\n.slogan{\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    font-size: 50px;\\r\\n    letter-spacing: 10px;\\r\\n    text-shadow: 4px 4px 3px rgba(0,0,0,0.1);\\r\\n}\\r\\n\\r\\n.pianoImage{\\r\\n    width:100%;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n.vinylImage{\\r\\n    width:100%;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n.slogan2{\\r\\n    font-size: 30px;\\r\\n    font-family: 'Comfortaa', cursive;\\r\\n}\\r\\n\\r\\n.main{\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.info{\\r\\n    margin-left:100px;\\r\\n}\\r\\n\\r\\n#scoreCard{\\r\\n    height: 400px;\\r\\n    width: 400px;\\r\\n    background-image: url(\\\"https://gideonsystems.net/images/piano.jpg\\\");\\r\\n    background-size: 400px 400px;\\r\\n    border-radius: 5px;\\r\\n    font-family: 'Comfortaa', cursive;\\r\\n}\\r\\n\\r\\n#recordCard{\\r\\n    height: 400px;\\r\\n    width: 400px;\\r\\n    background-image: url(\\\"https://gideonsystems.net/images/vinyl.jpg\\\");\\r\\n    background-size: 400px 400px;\\r\\n    border-radius: 5px;\\r\\n    font-family: 'Comfortaa', cursive;\\r\\n}\\r\\n\\r\\n#scoreCard:hover{\\r\\n    box-shadow: 5px 5px 10px rgb(148, 145, 145);\\r\\n}\\r\\n\\r\\n#recordCard:hover{\\r\\n    box-shadow: 5px 5px 10px rgb(148, 145, 145);\\r\\n}\\r\\n\\r\\na:hover{\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.floatText{\\r\\n    margin-top: 150px;\\r\\n    margin-left: 100px;\\r\\n    color: white;\\r\\n    font-size: 40px;\\r\\n}\\r\\n\\r\\n.info1{\\r\\n    text-align:center;\\r\\n    margin-top: 80px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n#buyButton{\\r\\n    margin-top: 40px;\\r\\n}\\r\\n\\r\\n.productCards{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 1fr;\\r\\n        grid-template-columns: 1fr 1fr;\\r\\n    justify-items: center;\\r\\n    margin-bottom: 125px;\\r\\n    width:100%;\\r\\n}\\r\\n\"","module.exports = \"   <div class=\\\"homePage\\\">\\n            <div class=\\\"main\\\">\\n                <div class=\\\"info1\\\">\\n                    <div class=\\\"slogan2\\\">\\n                    Sophisticated Scores. Simple Pricing. No Hassles.\\n                    </div>\\n                </div>\\n                <div class=\\\"productCards\\\">\\n                    <a routerLink=\\\"/samples\\\"><div id=\\\"scoreCard\\\" class=\\\"card\\\">\\n                        <div class=\\\"floatText\\\">Browse Scores </div>\\n                    </div></a>\\n                    <div  id=\\\"recordCard\\\" class=\\\"card\\\">\\n                        <div class=\\\"floatText\\\">Recording Sessions</div>\\n                    </div>\\n\\n                </div>\\n            </div>         \\n   </div>\\n   \\n   \\n    \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.loginMessage{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 100px;\\r\\n    color: white;\\r\\n    margin-bottom:200px;\\r\\n}\\r\\n.topMessage{\\r\\n    font-size: 25px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.subMessage{\\r\\n    margin-bottom: 30px;\\r\\n    width: 50%;\\r\\n}\\r\\n.paymentWindow{\\r\\n    height: 500px;;\\r\\n}\\r\\n#loginButton{\\r\\n    margin-right: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"loginMessage\\\">  \\n    <div class=\\\"topMessage\\\"><b>Wait!</b> You need to login or register with our site to complete a purchase!</div>\\n    <div class=\\\"subMessage\\\">Registering with our site is easy and will give you access to your purchased \\n        scores through your profile in the future.\\n    </div>\\n    <a routerLink=\\\"/login\\\"><button id=\\\"loginButton\\\" class=\\\"btn btn-default\\\">Login</button></a>\\n    <a routerLink=\\\"/register\\\"><button class=\\\"btn btn-default\\\">Register</button></a> \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-message',\n  templateUrl: './login-message.component.html',\n  styleUrls: ['./login-message.component.css']\n})\nexport class LoginMessageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".emailForm{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 100px;\\r\\n    margin-bottom: 100px;\\r\\n    width: 600px;\\r\\n    color: black;\\r\\n    margin: 30px auto;\\r\\n    background-color: rgba(250, 250, 249, 0.527);\\r\\n    padding: 40px;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid rgb(53, 52, 52);\\r\\n    box-shadow: 5px 10px 18px black;\\r\\n}\\r\\n\\r\\n\\r\\n.passwordTrouble{\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n\\r\\n.formField{\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\nlabel{\\r\\n    margin-left: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.buttons{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n    grid-column-gap: 5px;\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n\\r\\n.supportLabel{\\r\\nfont-size: 35px;\\r\\ncolor: black;\\r\\n}\\r\\n\\r\\n\\r\\nhr{\\r\\n    border-color: white;\\r\\n}\"","module.exports = \"<form  [formGroup]=\\\"rForm\\\" #myForm=\\\"ngForm\\\" class=\\\"emailForm\\\" (ngSubmit)=\\\"login(rForm.value,myForm)\\\">\\n  <div class=\\\"supportLabel\\\">Login to Lorenz Productions :</div>\\n  <hr>\\n  \\n  <div class=\\\"formField\\\">\\n    <label for=\\\"email\\\">Email :</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"email\\\">\\n  </div>\\n  <div class=\\\"formField\\\" >\\n    <label for=\\\"password\\\">Password :</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter password\\\" [(ngModel)]=\\\"name\\\">\\n  </div>\\n  <div class=\\\"buttons\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!rForm.valid\\\">Login</button>\\n    <a routerLink=\\\"/register\\\"><button class=\\\"btn btn-default\\\">Register</button></a>\\n  </div>\\n  <div class=\\\"passwordTrouble\\\">Having trouble logging in? Click <a routerLink=\\\"/forgot\\\">here</a> to recover your password.</div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  credentials: TokenPayload = {\n    email: '',\n    password: '',\n    subscription: false\n  };\n\n  rForm: FormGroup;\n  email: string;\n  password: string;\n\n  constructor(private auth: AuthenticationService, private router: Router,private fb:FormBuilder) {\n    this.rForm = fb.group({\n        'email'   : [null,Validators.compose([Validators.email,Validators.required])],\n        'password'    : [null,Validators.compose([Validators.required,Validators.minLength(6)])]\n      })\n  }\n  \n  ngOnInit() {\n  }\n  \n\n  login(formData,form: NgForm) {\n    \n    this.credentials.email=formData.email;\n    this.credentials.password=formData.password;\n    this.auth.login(this.credentials).subscribe(() => {\n      this.router.navigateByUrl('/profile');\n    }, (err) => {\n      console.error(err);\n    });\n  }\n\n}","module.exports = \"\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n    this.auth.logout();\n  }\n}\n","module.exports = \".shoppingCart{\\r\\n    color: black;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.removeButton{\\r\\n    display: hidden !important;\\r\\n\\r\\n}\\r\\n\\r\\n.paymentWindow{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 100px;\\r\\n    width:500px;\\r\\n    background-color: rgba(212, 212, 212);\\r\\n    color: black;\\r\\n    box-shadow: 5px 10px 18px black;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n.cartWindow{\\r\\n    margin-bottom: 200px;\\r\\n    margin-left: 50px;\\r\\n    margin-right: 50px;\\r\\n    padding-bottom:20px;\\r\\n    padding-top:5px;\\r\\n    \\r\\n}\\r\\n\\r\\n.loginMessage{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 200px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.topMessage{\\r\\n    font-size: 25px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.subMessage{\\r\\n    margin-bottom: 30px;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n#loginButton{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"paymentWindow\\\">\\n        <div class=\\\"cartWindow\\\">\\n            <div class=\\\"shoppingCart\\\">\\n               <app-side-cart></app-side-cart>\\n            </div>\\n            <div id=\\\"paypal-button\\\" (onPaymentCompleted)=\\\"goToDownload($event)\\\" ></div>\\n        </div>\\n        <div *ngIf=\\\"!this.auth.isLoggedIn()\\\" class=\\\"loginMessage\\\">  \\n            <div class=\\\"topMessage\\\"><b>Wait!</b> You need to login or register with our site to complete a purchase!</div>\\n            <div class=\\\"subMessage\\\">Registering with our site is easy and will give you access to your purchased \\n                scores through your profile in the future.\\n            </div>\\n            <a routerLink=\\\"/login\\\"><button id=\\\"loginButton\\\" class=\\\"btn btn-default\\\">Login</button></a>\\n            <a routerLink=\\\"/register\\\"><button class=\\\"btn btn-default\\\">Register</button></a> \\n        </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { Router } from '@angular/router';\nimport { Sample } from '../samples/samples.component';\nimport { PaymentTokenPayload } from '../authentication.service';\nimport { HttpClient,HttpClientModule } from '@angular/common/http';\nimport { AuthenticationService } from '../authentication.service';\nimport { UserDetails,PurchaseTokenPayload } from '../authentication.service';\ndeclare let paypal: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\n\n\n\nexport class PaymentComponent implements OnInit {\n\n  samples: Sample[];\n  subTotal: number;\n  itemCount: number;\n  item_list: String;\n  buttonScriptLoaded: boolean = false;\n  loggedIn: boolean = false;\n\n  buildItemList(samples){\n    let i =0;\n    var item_list_string = \"item_list: { items: [\";\n    for(i=0; i<samples.length;i++){\n      item_list_string += \"{ name: '\" + samples[i].name +\"',quantity: '1',price: '\" + samples[i].price +\n      \"',currency: 'USD'}\";\n      if(i!=(samples.length-1)){\n        item_list_string +=\",\";\n      }\n    }\n\n    item_list_string += \"]}\";\n    return item_list_string;\n  }\n\n  constructor(private auth: AuthenticationService,public cartService: CartService, private router: Router,public http:HttpClient) { }\n\n  ngOnInit() {\n\n   if(!this.auth.isLoggedIn()){\n    this.router.navigate(['/login-message']);\n   }\n    \n   \n    this.samples= this.cartService.getSelectedSamples();\n    this.checkScores();\n    this.samples= this.cartService.getSelectedSamples();\n    this.subTotal = this.cartService.getSubTotal();\n    this.item_list = this.buildItemList(this.samples);\n    \n\n    var paypalScript = document.createElement('script');\n    \n    paypalScript.textContent=\"paypal.Button.render({\\\n      env: 'production',\\\n      client: {\\\n        production:'AUO6x_LnK6xbnnnVNjENeMseWEPiE2kjUMZLYc6W7gfsArvPjMxso3woKrILKk-QzBDzEpcoxGPTbY4D'\\\n      },\\\n      payment: function (data, actions) {\\\n        \\\n        return actions.payment.create({\\\n          transactions: [{\\\n            amount: {\\\n              total: '\" + this.subTotal + \"',\\\n              currency: 'USD'\\\n            },\\\n            \" + this.item_list +\"\\\n          }]\\\n        });\\\n      },\\\n      onAuthorize:function(data, actions) {\\\n          return actions.payment.execute()\\\n            .then((data,actions)=>{\\\n              document.querySelector('#paypal-button').dispatchEvent(new CustomEvent('onPaymentCompleted', {bubbles: true, detail: {transactionData: data} }));\\\n            });\\\n      }\\\n    }, '#paypal-button');\";\n    \n    document.body.appendChild(paypalScript);\n   \n    this.buttonScriptLoaded = true;\n  }\n\n  ngAfterViewChecked(){\n    var removeButtons = document.getElementsByClassName('removeButton');\n    for(let i=0;i<removeButtons.length;i++)\n    {\n      removeButtons[i].parentNode.removeChild(removeButtons[i]);\n    }\n    let checkout = document.getElementsByClassName('btn btn-secondary');\n    if(checkout.length){\n      //Remove it\n         checkout[0].parentNode.removeChild(checkout[0]);\n    }\n    \n  }\n  goToDownload(data){\n    var data = data.detail.transactionData;\n   \n    var transactionData: PaymentTokenPayload = {\n      name: data.payer.payer_info.first_name + \" \" + data.payer.payer_info.last_name,\n      email: data.payer.payer_info.email,\n      total: data.transactions[0].amount.total,\n      items: data.transactions[0].item_list.items,\n      saleId: data.transactions[0].related_resources[0].sale.id\n    };\n\n   this.auth.transaction(transactionData).subscribe((data)=>{\n   \n    this.router.navigate(['/download']);\n  });\n  }\n\n  checkScores(){\n     var decodedToken: UserDetails;\n      var token = this.auth.getToken();\n      let payload = token.split('.')[1];\n     \n      payload = window.atob(payload);\n    \n      decodedToken = JSON.parse(payload);\n    \n      for(let i=0;i<decodedToken.purchases.length;i++){\n          var decodedPayToken: PurchaseTokenPayload;\n          let purchaseToken = decodedToken.purchases[i];\n         \n          payload = purchaseToken.split('.')[1];\n         \n          payload = window.atob(payload);\n          decodedPayToken = JSON.parse(payload);\n          for(let j=0;j<decodedPayToken.scores.length;j++){\n            for(let k=0;k<this.samples.length;k++){\n              if(decodedPayToken.scores[j]===this.samples[k].name){\n                window.alert('You own this score already! <'+ this.samples[k].name + '>\\nIt has been removed from your cart.');\n                this.cartService.removeSample(this.samples[k]);\n              }\n            }\n          }\n      }\n  }\n\n\n}\n\n\n","module.exports = \".profileContainer{\\r\\n    margin-left: 60px;\\r\\n    margin-top:30px;\\r\\n    margin-bottom:200px;\\r\\n    color:white;\\r\\n}\\r\\n\\r\\nhr{\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.content{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 4fr;\\r\\n        grid-template-columns: 1fr 4fr;\\r\\n}\\r\\n\\r\\n.purchaseLabel{\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\n.accountDetails{\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\n.mainContent{\\r\\n    margin-left: 75px;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\nul{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nli{\\r\\n    list-style-type: none;\\r\\n    margin-left: 20px;\\r\\n    margin-top:20px;\\r\\n    margin-bottom:20px;\\r\\n}\\r\\n\\r\\na{\\r\\n    color:black;\\r\\n}\\r\\n\\r\\n.optionsBar{\\r\\n    background-color: rgb(201, 197, 195);\\r\\n    height: 400px;\\r\\n    border-radius: 3px;\\r\\n    border: 1px solid rgb(58, 57, 57);\\r\\n}\\r\\n\\r\\n.profileHeader{\\r\\n    text-align: center;\\r\\n    font-size: 30px;\\r\\n    width: 75%;\\r\\n}\\r\\n\\r\\n.scoreList{\\r\\n    margin-top:50px;\\r\\n}\\r\\n\\r\\n.content{\\r\\n    margin-top:100px;\\r\\n}\"","module.exports = \"<div class=\\\"profileContainer\\\">\\n    <div class=\\\"profileHeader\\\">Welcome Back, {{this.name}}!<hr></div>\\n    \\n    \\n    <div class=\\\"content\\\">\\n            <span class=\\\"optionsBar\\\">\\n                <ul>\\n                    <li><a routerLink='/profile'>Account ></a></li>\\n                    <hr>\\n                    <li><a routerLink='/download'>My Downloads</a></li>\\n                    <hr>\\n                    <li><a routerLink='/contactMe'>Submit a Support Request</a></li>\\n                    <hr>\\n                    <li><a routerLink='/forgot'>Reset Password</a></li>\\n                    <hr>\\n                    <li><a *ngIf=\\\"this.showDash()\\\" routerLink='/dashboard'>Admin Dashboard</a></li>\\n                </ul>\\n            </span>\\n            <span class=\\\"mainContent\\\">\\n                    <div class=\\\"userInfo\\\">\\n                        <div class=\\\"accountDetails\\\">Account Details :</div>\\n                        <hr>\\n                        <div class=\\\"email\\\">Email : {{details?.email}}</div>\\n                        <div class=\\\"name\\\">Name : {{details?.name}}</div>\\n                        <hr>\\n                    </div>\\n                    <div class=\\\"scoreList\\\">\\n                        <div class=\\\"purchaseLabel\\\">Your Purchases:</div>\\n                        <hr>\\n                        <div class=\\\"noPurchaseMessage\\\" *ngIf=\\\"!scores.length\\\">You haven't purchased any scores yet! Go to the samples page to browse our selections.</div>\\n                        <li *ngFor=\\\"let score of scores\\\">\\n                                <div class=\\\"scoreName\\\">{{score?.name}}</div>\\n                                <div class=\\\"exp\\\">Expires : {{score?.exp | date : 'longDate' }}</div>\\n                        </li>\\n                        <hr>\\n                    </div>\\n            </span>\\n    </div>   \\n</div>\\n\\n  \\n\"","import { Component } from '@angular/core';\nimport { AuthenticationService, UserDetails } from '../authentication.service';\nimport { PurchaseTokenPayload } from '../authentication.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\n\n\nexport class ProfileComponent {\n  details: UserDetails;\n  scores: Purchase[];\n  name: String;\n\n  constructor(private auth: AuthenticationService) {}\n\n  //This component will display some basic profile info like \n  //The users name,email,list of purchased scores\n  //Options to: reset password, go to downloads, logout\n  //            submit a support ticket\n  //\n\n\n  ngOnInit() {    \n    window.scrollTo(0,300);\n    this.auth.profile().subscribe(user => {\n      this.details = user;\n      this.getScoresFromToken();\n      this.name = this.details.name.split(' ')[0];\n    }, (err) => {\n      console.error(err);\n    });\n  }\n  \n  getScoresFromToken(){\n    let payload,token,k=0;\n    var decodedToken: PurchaseTokenPayload;\n    this.scores= [];\n    for(let i=0;i<this.details.purchases.length;i++){\n      token = this.details.purchases[i];\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      decodedToken =  JSON.parse(payload);\n     \n      \n      for(let j=0;j<decodedToken.scores.length;j++){\n        var newExp = new Date();\n        newExp.setTime(decodedToken.exp*1000);\n        var nextPurchase = {name:decodedToken.scores[j],exp:newExp};\n        this.scores.push(nextPurchase);\n      }\n    }\n    return ;\n  }\n\n  showDash(){\n    if(this.details.email==\"rossgideon@my.unt.edu\")\n      return true;\n    if(this.details.email==\"Jarendlorenz@gmail.com\")\n      return true;\n    else\n      return false;\n  }\n    \n\n}\n\ninterface Purchase{\n  name: String;\n  exp: Date;\n}","module.exports = \".emailForm{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 100px;\\r\\n    margin-bottom: 100px;\\r\\n    width: 600px;\\r\\n    color: black;\\r\\n    margin: 30px auto;\\r\\n    margin-bottom: 100px;\\r\\n    background-color:  rgba(250, 250, 249, 0.527);\\r\\n    padding: 40px;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid rgb(43, 41, 41);\\r\\n    box-shadow: 5px 10px 18px black;\\r\\n}\\r\\n\\r\\n#fakeLink{\\r\\n    color: blue;\\r\\n    cursor:pointer;\\r\\n}\\r\\n\\r\\n.checkBox{\\r\\n    margin-top: 10px;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 6fr;\\r\\n        grid-template-columns: 1fr 6fr;\\r\\n}\\r\\n\\r\\n.policyBox{\\r\\n    overflow: auto;\\r\\n    color: white !important;\\r\\n    height: 400px;\\r\\n    width: 600px;\\r\\n}\\r\\n\\r\\n.passwordTrouble{\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n.formField{\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    margin-left: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n    grid-column-gap: 5px;\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n.supportLabel{\\r\\nfont-size: 35px;\\r\\ncolor: black;\\r\\n}\\r\\n\\r\\nhr{\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.registerPage{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n}\\r\\n\\r\\n.policies{\\r\\n    margin-top: 200px;\\r\\n    margin-right: 150px;\\r\\n}\"","module.exports = \"<div class=\\\"registerPage\\\">\\n    <form *ngIf=\\\"!emailSuccess\\\" [formGroup]=\\\"rForm\\\" #myForm=\\\"ngForm\\\" class=\\\"emailForm\\\" (ngSubmit)=\\\"register(rForm.value,myForm)\\\">\\n        <div class=\\\"supportLabel\\\">Register Below with Lorenz Productions :</div>\\n        <hr>\\n        \\n    \\n        <div class=\\\"formField\\\" >\\n            <label for=\\\"name\\\">Full Name :</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"First Last\\\" [(ngModel)]=\\\"name\\\">\\n          </div>\\n        <div class=\\\"formField\\\">\\n          <label for=\\\"email\\\">Email :</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"email\\\">\\n        </div>\\n        <div class=\\\"formField\\\" >\\n          <label for=\\\"password\\\">Password :</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter password\\\" [(ngModel)]=\\\"password\\\">\\n        </div>\\n        <div class=\\\"checkBox\\\" >\\n            <input type=\\\"checkbox\\\" class=\\\"form-control\\\" formControlName=\\\"privacy\\\" name=\\\"privacy\\\">\\n            <label for=\\\"privacy\\\">I have read and agree to the <span id=\\\"fakeLink\\\" (click)=\\\"this.showTerms()\\\">Terms of Use</span> and <span id=\\\"fakeLink\\\" (click)=\\\"this.showPrivacy()\\\">Privacy Policy</span></label>\\n        </div>\\n        <div class=\\\"checkBox\\\" >\\n            <input type=\\\"checkbox\\\" class=\\\"form-control\\\" formControlName=\\\"subscription\\\" name=\\\"subscription\\\" >\\n            <label for=\\\"subscription\\\">I agree to receive occasional emails about new scores and offers</label>\\n        </div>\\n        <div class=\\\"buttons\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!rForm.valid\\\">Sign Up!</button>\\n        </div>\\n      </form>\\n      <div *ngIf=\\\"this.viewPolicy\\\" class=\\\"policies\\\">\\n          <iframe *ngIf=\\\"this.viewPrivacy\\\" class=\\\"policyBox\\\" src=\\\"http://localhost:1737/privacyPolicy.html\\\"></iframe>\\n          <iframe *ngIf=\\\"this.viewTerms\\\" class=\\\"policyBox\\\" src=\\\"http://localhost:1737/terms.html\\\"></iframe>\\n      </div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  credentials: TokenPayload = {\n    email: '',\n    name: '',\n    password: '',\n    subscription: false\n  };\n\n  rForm: FormGroup;\n  email: string;\n  name: string;\n  password: string;\n  viewPolicy: boolean= false;\n  viewPrivacy: boolean= false;\n  viewTerms: boolean=false;\n\n  constructor(private auth: AuthenticationService, private router: Router,private fb:FormBuilder) {\n    this.rForm = fb.group({\n      'email'   : [null,Validators.compose([Validators.email,Validators.required])],\n      'name'  : [null,Validators.compose([Validators.required])],\n      'password'    : [null,Validators.compose([Validators.required,Validators.minLength(6)])],\n      'privacy'     : [null,Validators.required],\n      'subscription': ['']\n    })\n\n\n  }\n\n  register(formData,form: NgForm) {\n    console.log(formData);\n    this.credentials.email=formData.email;\n    this.credentials.password=formData.password;\n    this.credentials.name = formData.name;\n    this.credentials.subscription = formData.subscription;\n    this.auth.register(this.credentials).subscribe(() => {\n      this.router.navigateByUrl('/profile');\n    }, (err) => {\n      console.error(err);\n    });\n  }\n\n  showTerms(){\n    \n        if(this.viewPrivacy==true)\n          this.viewPrivacy=false;\n        if(this.viewPolicy==false)\n          this.viewPolicy=true;\n        if(this.viewTerms==false)\n          this.viewTerms=true;\n  }\n  showPrivacy(){\n  \n    if(this.viewTerms==true)\n      this.viewTerms=false;    \n    if(this.viewPolicy==false)\n      this.viewPolicy=true;\n    if(this.viewPrivacy==false)\n      this.viewPrivacy=true;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable} from 'rxjs';\nimport  { map } from 'rxjs/operators';\nimport { Sample } from './samples/samples.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SampleService {\n\n  constructor(public http: Http) { }\n\n\n  getSamples(): Observable<Sample[]>{\n    return this.http.get('https://gideonsystems.net/samples/list')\n    .pipe(map((res) => res.json()));\n  }\n\n}\n","module.exports = \".allSamples{\\r\\nmargin-left:80px;\\r\\nmargin-top: 40px;\\r\\nmargin-bottom: 80px;\\r\\nwidth: 80%;\\r\\n}\\r\\n\\r\\nli{\\r\\n    list-style-type: none;\\r\\n\\r\\n}\\r\\n\\r\\n.samplesGrid{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 2fr 1fr;\\r\\n        grid-template-columns: 2fr 1fr;\\r\\n}\\r\\n\\r\\n.shoppingCart{\\r\\n    color: black;\\r\\n    background-color: rgb(202, 199, 199);\\r\\n    width: 80%;\\r\\n    border-radius: 5px;\\r\\n    margin-top: 40px;\\r\\n    box-shadow: -5px 10px 18px black;   \\r\\n}\\r\\n\\r\\nhr{\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n#trackInfo{\\r\\n    color:white;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.scorePrice{\\r\\n    color:white;\\r\\n}\\r\\n\\r\\n#singleSample{\\r\\n    color: white;\\r\\n    height: 200px;\\r\\n}\\r\\n\\r\\n.player{    \\r\\n    width:75%;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.optionButtons{\\r\\n    width:20%;\\r\\n    float: right;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-rows: 2fr 2fr 1fr;\\r\\n        grid-template-rows: 2fr 2fr 1fr;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n#detailsButton{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div  class=samplesGrid>\\n    <span class=\\\"allSamples\\\">\\n        <li *ngFor=\\\"let sample of samples\\\">\\n            <div id=\\\"singleSample\\\">\\n                <h3>{{sample.name}}</h3>\\n                <script src=\\\"https://w.soundcloud.com/player/api.js\\\"></script>\\n                <iframe class=\\\"player\\\" width=\\\"33%\\\" height=\\\"120\\\" scrolling=\\\"no\\\" frameborder=\\\"no\\\"\\n                src=\\\"\\\">\\n                </iframe>\\n                <span class=\\\"optionButtons\\\">\\n                    <a [routerLink]=\\\"['/score-details',sample.name]\\\"><button id=\\\"detailsButton\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">About This Score</button></a>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" >Add to Cart</button>\\n                    <span class=\\\"scorePrice\\\">Price: {{sample.price | currency}}</span>\\n                </span>\\n            </div>\\n            <section id=\\\"trackInfo\\\">\\n                {{sample.description}}\\n            </section>\\n            <hr>\\n        </li>\\n    </span>\\n\\n    <span class=\\\"shoppingCart\\\">\\n        <app-side-cart></app-side-cart>\\n    </span>\\n\\n</div>\\n\\n\"","import $ from 'jquery';\nimport { Component, OnInit } from '@angular/core';\nimport { SampleService } from '../sample.service';\nimport { CartService } from '../cart.service';\n\n\n@Component({\n  selector: 'app-samples',\n  templateUrl: './samples.component.html',\n  styleUrls: ['./samples.component.css']\n})\nexport class SamplesComponent implements OnInit {\n\n  constructor(private sampleService: SampleService, public cartService: CartService) { }\n\n  samples: Sample[];\n  firstViewCheck: boolean = true;\n\n  ngOnInit() {\n    this.sampleService.getSamples().subscribe((newsamples) => {\n      this.samples = newsamples; \n    });\n  }\n\n \n  \n  ngAfterViewChecked(){\n    var players = document.getElementsByClassName(\"player\");\n    var cartButtons = document.getElementsByClassName(\"btn btn-primary\");\n    if(this.firstViewCheck && cartButtons.length)  \n    {\n      for(let i=0; i<players.length;i++){\n        players[i].setAttribute('src',this.samples[i].soundCloud);\n        cartButtons[i].addEventListener('click',()=>{\n          this.cartService.addSample(this.samples[i])});\n      }\n      this.firstViewCheck=false;\n    }\n  }\n}\n\nexport interface Sample{\n  name: string,\n  soundCloud: string,\n  longDesc: string,\n  instrumentation: [string],\n  difficulty: string,\n  description: string,\n  price: number,\n}","module.exports = \".detailsPage{\\r\\n    color:white;\\r\\n    margin-left: 100px;\\r\\n    margin-top: 100px;\\r\\n    width: 90%;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 3fr 1fr;\\r\\n        grid-template-columns: 3fr 1fr;\\r\\n}\\r\\n\\r\\nhr{\\r\\n    border-color: white;\\r\\n    margin-top: 8px;\\r\\n}\\r\\n\\r\\n.singleInstrument{\\r\\n    margin-left: 50px;\\r\\n}\\r\\n\\r\\nli{\\r\\n    list-style-type: circle;\\r\\n}\\r\\n\\r\\n.instrumentation{\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.content{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 1fr 1fr;\\r\\n        grid-template-columns: 1fr 1fr;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.shoppingCart{\\r\\n    color: black;\\r\\n    background-color: rgb(202, 199, 199);\\r\\n    width: 80%;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: -5px 10px 18px black;   \\r\\n}\\r\\n\\r\\n.label{\\r\\n    margin-right: 15px;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n#cartButton{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.detailsLabel{\\r\\n    font-size: 20px;\\r\\n    margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n#blackHr{\\r\\n    border-color: black;\\r\\n}\\r\\n\\r\\n.description{\\r\\n    margin-bottom: 200px;\\r\\n\\r\\n}\\r\\n\\r\\n.detailsContent{\\r\\n   background-color: white;\\r\\n   width: 66%;\\r\\n   padding-left: 15px;\\r\\n   padding-bottom: 15px;\\r\\n   border-radius: 8px; \\r\\n   color: black;\\r\\n   box-shadow: 5px 10px 18px black;\\r\\n}\"","module.exports = \"\\n<div class=\\\"detailsPage\\\">\\n  <div class=\\\"container\\\">\\n      <h2>{{this.currentSample.name}}</h2>\\n    <hr>\\n    <script src=\\\"https://w.soundcloud.com/player/api.js\\\"></script>\\n    <div class=\\\"content\\\">\\n      <div class=\\\"detailsContent\\\">\\n          <div class=\\\"detailsLabel\\\">Details:</div>\\n          <hr width=\\\"45%\\\" align=\\\"left\\\" id=\\\"blackHr\\\">\\n          <div class=\\\"difficulty\\\"><span class=\\\"label\\\">Difficulty:</span> {{this.currentSample.difficulty}}/10</div>\\n          <div class=\\\"instrumentation\\\">\\n              <span class=\\\"label\\\">Instrumentation:</span>\\n              <li class=\\\"singleInstrument\\\" *ngFor=\\\"let instrument of this.currentSample.instrumentation\\\">\\n                {{instrument}}\\n              </li>\\n          </div>\\n          <div class=\\\"price\\\"><span class=\\\"label\\\">Price:</span> {{this.currentSample.price | currency}}</div>\\n          <button id=\\\"cartButton\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" >Add to Cart</button>\\n      </div>\\n      <iframe class=\\\"player\\\" width=\\\"100%\\\" height=\\\"120\\\" scrolling=\\\"no\\\" frameborder=\\\"no\\\" src=\\\"\\\"></iframe>\\n    </div>\\n    <div class=\\\"description\\\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis laudantium neque magnam veniam aliquam rerum repellat possimus nobis eveniet quam dolores veritatis in non dignissimos fugit nam distinctio blanditiis earum maxime minus perferendis, quis esse saepe placeat! Tempore accusantium, sunt possimus iure molestias libero inventore nobis. Odit ex tenetur enim? Veniam dolorum ea beatae accusantium maxime dolorem voluptatum impedit, aut animi quasi, ab quo soluta. Expedita officiis facilis nihil nesciunt voluptas explicabo perspiciatis excepturi eos amet at, deserunt, nam, placeat alias enim voluptate illum soluta earum veniam fugiat dicta ipsa laborum! Itaque rerum deserunt vitae et, eum omnis consectetur ducimus placeat pariatur excepturi consequuntur culpa illo nemo assumenda nulla, veritatis laboriosam reiciendis voluptatibus maxime. Consequatur totam perferendis debitis? Expedita, maxime earum harum totam corporis sapiente exercitationem neque hic provident minima voluptates consequatur cum quia cumque temporibus sit tenetur. Fugit laboriosam libero reiciendis itaque dolore saepe animi rem obcaecati, quo illo vel velit eaque possimus repudiandae esse necessitatibus debitis tenetur blanditiis voluptas odio eos expedita ab veritatis ratione. Illo, sapiente magnam nostrum maiores aperiam rem minus accusantium. Explicabo omnis debitis illo repudiandae cumque officia. Molestiae necessitatibus dolores similique quidem, rerum sapiente, distinctio architecto quasi numquam voluptatem fuga odio tempore iusto nisi.</div>\\n  </div>\\n  <div class=\\\"shoppingCart\\\">\\n    <app-side-cart></app-side-cart>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SampleService } from '../sample.service';\nimport { Sample } from '../samples/samples.component';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-score-details',\n  templateUrl: './score-details.component.html',\n  styleUrls: ['./score-details.component.css']\n})\nexport class ScoreDetailsComponent implements OnInit {\n\n  samples: Sample[];\n  currentSample: Sample;\n  score: string;\n  sub: any;\n  \n  constructor(public cartService: CartService,private route: ActivatedRoute,private sampleService: SampleService) { }\n\n  ngOnInit() {\n\n    this.sub = this.route.params.subscribe(params =>{\n     \n      this.score = params['name'];\n      this.sampleService.getSamples().subscribe((newsamples) => {\n        this.samples = newsamples; \n        this.currentSample = this.getSample(this.score);\n        var player = document.getElementsByClassName(\"player\");\n        var cartButton = document.getElementsByClassName(\"btn btn-primary\")\n        player[0].setAttribute('src',this.currentSample.soundCloud);\n        cartButton[0].addEventListener('click',()=>{\n          this.cartService.addSample(this.currentSample);\n        })\n      });\n    })\n  }\n\n  getSample(score): Sample{\n      for(let i=0;i<this.samples.length;i++){\n        if(this.samples[i].name==score)\n          return this.samples[i];\n      }\n  }\n\n}\n","module.exports = \".cartHeader{\\r\\n    font-size: 30px;\\r\\n    text-align: center;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.removeButton{\\r\\n    margin-right: 10px;\\r\\n    background-color:  #707474;\\r\\n    color: white;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid rgb(41, 40, 40)\\r\\n}\\r\\n\\r\\nli{\\r\\n    list-style-type: none;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.cartItems{\\r\\n    margin-left: 10px;\\r\\n    margin-bottom: 60px;\\r\\n}\\r\\n\\r\\n.cartFooter{\\r\\n    margin-top: 30px;\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-rows: 1fr 1fr;\\r\\n        grid-template-rows: 1fr 1fr;\\r\\n}\\r\\n\\r\\n.numItems{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 3fr 1fr;\\r\\n        grid-template-columns: 3fr 1fr;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.countLabel{\\r\\n    margin-left: 10px;\\r\\n    font-size: 20px;\\r\\n    text-decoration: underline;\\r\\n    -webkit-text-decoration: 2px;\\r\\n            text-decoration: 2px;\\r\\n}\\r\\n\\r\\n#checkoutButton{\\r\\n    margin-left: 10px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.subLabel{\\r\\n    margin-left: 10px;\\r\\n    font-size: 20px;\\r\\n    text-decoration: underline;\\r\\n    -webkit-text-decoration: 2px;\\r\\n            text-decoration: 2px;\\r\\n}\\r\\n\\r\\n.subTotal{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 3fr 1fr;\\r\\n        grid-template-columns: 3fr 1fr;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.itemTitle{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 3fr 1fr;\\r\\n        grid-template-columns: 3fr 1fr;\\r\\n}\\r\\n\\r\\n.itemName{\\r\\n    margin-right: 15px;\\r\\n    font-size:17px;\\r\\n    \\r\\n}\\r\\n\\r\\n.sideCart{\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n    top: 100px;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"sideCart\\\">\\n  <h3 class=\\\"cartHeader\\\">Your Cart</h3>\\n  <hr>\\n  <div  class=\\\"cartItems\\\">\\n    <li *ngFor=\\\"let sample of samples\\\">\\n      <div class=\\\"itemTitle\\\">\\n        <span class=\\\"itemName\\\">{{sample.name}} [PDF Download]</span>\\n        <button type=\\\"button\\\" class=\\\"removeButton\\\" [attr.data-samplename]=\\\"sample.name\\\">Remove</button>\\n      </div>\\n        <div>{{sample.price | currency}}</div>\\n    </li>\\n  </div>\\n  <div class=\\\"cartFooter\\\">\\n    <div class=\\\"numItems\\\">\\n      <span class=\\\"countLabel\\\">Total Scores:</span>\\n      <span class=\\\"countNumber\\\">{{itemCount}}</span> \\n    </div>\\n    <div class=\\\"subTotal\\\">\\n      <span class=\\\"subLabel\\\">Subtotal :</span>\\n      <span class=\\\"subNumber\\\">{{subTotal | currency}}</span>\\n    </div>\\n  </div>\\n  <a routerLink=\\\"/payment\\\"><button id=\\\"checkoutButton\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" >Checkout</button></a>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Sample } from '../samples/samples.component';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-side-cart',\n  templateUrl: './side-cart.component.html',\n  styleUrls: ['./side-cart.component.css']\n})\nexport class SideCartComponent implements OnInit {\n\n  samples: Sample[];\n  subTotal: number;\n  itemCount: number;\n  prevCount: number = 0;\n  constructor(public cartService: CartService) { }\n\n  ngOnInit() {\n    this.samples = this.cartService.getSelectedSamples();\n    this.subTotal = this.cartService.getSubTotal();\n    this.itemCount = this.cartService.getItemCount();\n  }\n\n  ngDoCheck(){\n    this.samples = this.cartService.getSelectedSamples();\n    this.subTotal=this.cartService.getSubTotal();\n    this.itemCount=this.cartService.getItemCount();\n    if(this.itemCount==(this.prevCount-1)){\n      this.prevCount=this.itemCount;\n    }\n  }\n \n  ngAfterViewChecked(){\n    this.subTotal=this.cartService.getSubTotal();\n    this.itemCount=this.cartService.getItemCount();\n    var removeButtons = document.getElementsByClassName('removeButton');\n    if(removeButtons.length>this.prevCount)\n    {\n      var currentSample = this.getButtonsSample(removeButtons[this.prevCount].getAttribute('data-samplename')); \n      removeButtons[this.prevCount].addEventListener('click',()=>{\n        this.cartService.removeSample(currentSample);\n      });\n      this.prevCount++;\n    }\n\n  }\n\n  getButtonsSample(sampleName){\n     for(let i = 0; i < this.samples.length; i++){\n        if(this.samples[i].name==sampleName){\n            return this.samples[i];\n        }\n     }\n  }\n\n}\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}